---
title: "Data Analysis on Volcano Eruptions and Environmental Impact"
author: "`Jeongyeon Yun (Jennie)`"
format: revealjs
editor: visual
---

```{r setup, echo: false, message: false, warning: false, show_col_types = FALSE}
#| echo: FALSE

library(dplyr) # data wrangling
library(tidyr) # tidy thre data 
library(ggplot2) # grammer of graphics
library(ggpubr)
library(readr)
library(gridExtra)
library(patchwork)

# Load datasets 
eruptions <- read_csv("tidytuesday:2020:2020-05-12:volcano/eruptions.csv", show_col_types = FALSE)
env_impact <- read_csv("tidytuesday:2020:2020-05-12:volcano/tree_rings.csv", show_col_types = FALSE)

```

------------------------------------------------------------------------

## Project Overview 

This study explores the relationship between volcanic eruptions, represented by the Volcanic Explosivity Index (VEI), and their environmental impact. The data is provided by TidyTuesday.

------------------------------------------------------------------------

## Data Overview

The analysis uses the following datasets and key variables:

-   **Eruptions:** Contains eruption years, locations (latitude, longitude), and VEI values (Volcanic Explosivity Index (0 to 8 scale))
-   **Env_impact:** Records environmental data, including the Europe Temperature Index (°C, relative to 1961–1990) and n_tree (Tree ring z-scores (relative to 1000–1099))

![VEI-Wikipedia](https://upload.wikimedia.org/wikipedia/commons/0/01/VEIfigure_en.svg)
------------------------------------------------------------------------

## Mapping: Spatial Distribution of volcano eruptions by VEI

The first analysis visualizes the spatial distribution of volcanic eruptions by VEI

```{r}
#| code-fold: true
# Mapping VEI values across the globe
ggplot(data = eruptions %>% filter(!is.na(vei)), aes(x = longitude, y = latitude, color = vei)) +
  borders("world", colour = "gray80", fill = "gray95") +
  geom_point(size = 2, alpha = 0.5) +
  scale_color_gradient(low = "blue", high = "red") +
  theme_minimal() +
  labs(
    title = "Map of Volcano Eruptions with VEI Scale",
    x = "Longitude",
    y = "Latitude",
    color = "VEI"
  )

```

------------------------------------------------------------------------

## Correlation: Tree ring z-score vs. Europe Temperature Index

Next, we analyze the relationship between the Tree ring z-scores and the Europe Temperature Index

```{r}
# Correlation analysis
ggplot(env_impact, aes(x = n_tree, y = europe_temp_index)) + 
  geom_point(size = 1, stroke = 0.8, color = "grey40") + 
  geom_smooth(method = "lm", color = "red") + 
  stat_cor(aes(label = ..r.label..), method = "pearson", color = "black", size = 4) +
  ggtitle("Correlation Between Tree Ring Z-Scores and Europe Temperature Index") +
  theme_minimal() +
  xlab("Tree Ring Z-Scores") +
  ylab("Europe Temperature Index")
```
---

## Multiplots: How volcanic eruptions with based on VEI intensity affect Europe temperature

To investigate how volcanic eruptions, categorized by their Volcanic Explosivity Index (VEI), impact the Europe Temperature Index (ETI) in the same year, I visualized the data in two separate plots

---
```{r}
# Merge env_impact data with eruption data
env_impact_vei <- inner_join(env_impact, eruptions, by = c("year" = "start_year"))

# Categorize VEI into levels (1-2, 3-4, >=5)
env_impact_vei <- env_impact_vei %>%
  mutate(vei_category = case_when(
    vei >= 5 ~ "VEI >= 5",  # Large eruptions
    vei >= 3 ~ "VEI 3-4",    # Moderate eruptions
    vei >= 1 ~ "VEI 1-2",    # Small eruptions
    TRUE ~ NA_character_    
  ))

# Calculate average Europe Temperature Index for each VEI category
vei_temp_index <- env_impact_vei %>%
  filter(!is.na(vei_category)) %>%
  group_by(vei_category) %>%
  summarise(avg_temp_index = mean(europe_temp_index, na.rm = TRUE)) %>%
  mutate(vei_category = factor(vei_category, levels = c("VEI 1-2", "VEI 3-4", "VEI >= 5")))

# Plot 1: VEI Category vs Average Europe Temperature Index
plot1 <- ggplot(vei_temp_index, aes(x = vei_category, y = avg_temp_index, fill = vei_category)) +
  geom_bar(stat = "identity") + 
  geom_text(aes(label = round(avg_temp_index, 2)), vjust = -0.5) +  # Show average on top of bars
  labs(x = "VEI Category", y = "Average ETI") +
  theme_minimal() + 
  theme(
    legend.position = "top"  # Move legend to the top
  )

# Plot 2: VEI Intensity and Europe Temperature Index Over Time
# Calculate VEI intensity by year
vei_intensity <- env_impact_vei %>%
  group_by(year, vei_category) %>%
  summarise(vei_count = n()) %>%
  mutate(vei_intensity_value = case_when(
    vei_category == "VEI >= 5" ~ vei_count * 10000,
    vei_category == "VEI 3-4" ~ vei_count * 100,
    vei_category == "VEI 1-2" ~ vei_count * 1,
    TRUE ~ 0
  ))

# Total VEI intensity per year
vei_intensity_total <- vei_intensity %>%
  group_by(year) %>%
  summarise(total_intensity = sum(vei_intensity_value))

# Join VEI intensity data with Europe Temperature Index data
vei_temp_joined <- left_join(vei_intensity_total, env_impact_vei, by = "year")

# Plot 2: Combine bar chart (VEI intensity) and line chart (Temperature Index)
plot2 <- ggplot(vei_temp_joined, aes(x = year)) +
  geom_bar(aes(y = total_intensity, fill = "VEI Intensity"), stat = "identity", alpha = 0.9, linewidth = 10) +
  geom_line(aes(y = europe_temp_index * 100000, color = "Europe Temperature Index"), size = 1) +
  scale_y_continuous(
    name = "VEI Intensity",
    sec.axis = sec_axis(~ . / 100000, name = "Europe Temperature Index (°C)")
  ) +
  scale_fill_manual(values = c("VEI Intensity" = "blue")) +
  scale_color_manual(values = c("Europe Temperature Index" = "red")) +
  labs(x = "Year") +
  theme_minimal()+
  theme(legend.position = "top")

# Combine the plots with adjusted spacing
plot1 + plot2 + 
  plot_annotation(tag_levels = 'a',
                title = "VEI intensity effect on Europe temperature",
                subtitle = "a:Average ETI by VEI category b:VEI and ETI over time")+
  plot_layout(widths = c(3, 11)) +
  theme(legend.position = "top", 
        legend.title = element_text(size =11),
        legend.text = element_text(size = 11),
        legend.key.size = unit(0.2, 'cm'),
        plot.tag = element_text(size = 11, face = 'bold'),
        plot.title = element_text(size = 25, face = 'bold'),  # Increase title size
        plot.subtitle = element_text(size = 20)) 
```
